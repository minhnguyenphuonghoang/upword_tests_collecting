*** Settings ***
Library           Selenium2Library
Library           String
Library           Collections
Library           Email.py

*** Variables ***
${time_out}       15s

*** Test Cases ***
collecting data
    @{accounts}=    Create List    automationguru3/AutomationGuru3
    @{test_sites}=    Create List    https://www.upwork.com/tests/981
    Comment    This is comment for @test_sites variable    Python
    :FOR    ${an_account}    IN    @{accounts}
    \    ${username}    ${password}    Split String    ${an_account}    /
    \    Login    ${username}    ${password}
    \    goto test site and start collecting test resources    https://www.upwork.com/tests/981
    [Teardown]    Close All Browsers

test2
    ${a}    ${b}    test

*** Keywords ***
Login
    [Arguments]    ${username}    ${password}
    Open Browser    https://www.upwork.com/ab/account-security/login    gc
    Maximize Browser Window
    Wait Until Page Contains Element    //input[@id="login_username"]    ${time_out}
    Input Text    //input[@id="login_username"]    ${username}
    Wait Until Page Contains Element    //input[@id="login_password"]    ${time_out}
    Input Text    //input[@id="login_password"]    ${password}
    Wait Until Page Contains Element    //form[@name="login"]/div[3]//button[contains(text(),"Log In")]    ${time_out}
    Click Element    //form[@name="login"]/div[3]//button[contains(text(),"Log In")]
    Wait Until Page Does Not Contain Element    //form[@name="login"]/div[3]//button[contains(text(),"Log In")]    30s

goto test site and start collecting test resources
    [Arguments]    ${test_site_url}
    Go To    ${test_site_url}
    Wait Until Page Contains Element    //a[contains(text(),"Start Test")]    ${time_out}
    Click Element    //a[contains(text(),"Start Test")]
    Wait Until Page Contains Element    //form[@id="questionForm"]/pre    30s
    Wait Until Page Contains Element    //div[@id="answerOptions"]/div    30s
    Wait Until Page Contains Element    //div[@id="continue"]    30s
    Wait Until Page Contains Element    //div[@id="oLayout"]//h2    30s
    Sleep    5s
    ${first}    ${last}    get question number
    ${current_question_no}=    Set Variable    0
    :FOR    ${index}    IN RANGE    ${first}    ${last}
    \    check next question is appeared    ${current_question_no}
    \    ${current_question_no}    ${temp}    get question number
    \    ${question}=    get question text
    \    ${answers}=    get answer text
    \    Click Element    //div[@id="answerOptions"]/div[1]
    \    Wait Until Page Contains Element    //div[@id="continue"]    ${time_out}
    \    Click Element    //div[@id="continue"]

get question text
    Wait Until Page Contains Element    //form[@id="questionForm"]/pre    ${time_out}
    ${question_text}=    Get Text    //form[@id="questionForm"]/pre
    [Return]    ${question_text}

get answer text
    Wait Until Page Contains Element    //div[@id="answerOptions"]/div    ${time_out}
    ${no_of_answers}=    Get Matching Xpath Count    //div[@id="answerOptions"]/div
    ${no_of_answers}=    Evaluate    ${no_of_answers} + 1
    ${answer}=    Create List
    :FOR    ${index}    IN RANGE    1    ${no_of_answers}
    \    ${temp}=    Get Text    //div[@id="answerOptions"]/div[${index}]
    \    Append To List    ${answer}    ${temp}
    [Return]    ${answer}

check next question is appeared
    [Arguments]    ${current_question}
    :FOR    ${index}    IN RANGE    50
    \    ${temp001}    ${temp002}    get question number
    \    ${result}=    Run Keyword And Return Status    Should Not Be Equal    ${temp001}    ${current_question}
    \    Exit For Loop If    ${result}==True
    \    Sleep    2s

get question number
    Wait Until Page Contains Element    //div[@id="oLayout"]//h2    ${time_out}
    ${questions}=    Get Text    //div[@id="oLayout"]//h2
    ${first}    ${last}    Split String    ${questions}    ${SPACE}of${SPACE}
    ${first}=    Remove String    ${first}    Question${SPACE}
    ${first}=    Convert To Number    ${first}
    ${last}=    Evaluate    ${last} + 1
    [Return]    ${first}    ${last}
